package componentes;

import controller.BlocoComponentController;
import java.awt.Color;
import javax.swing.JLabel;
import model.Reserva;
import rsbuttom.RSButtonMetro;

/**
 *
 * @author Elyneker Luciani
 */
public class BlocoComponent extends javax.swing.JPanel {

    private Reserva reserva = new Reserva();

    private BlocoComponentController blocoController;

    /**
     * Creates new form QuartoComponent
     */
    // Construtor usado quando não há quartos cadastrados
    public BlocoComponent() {
        initComponents();
        this.status.setText("Não existe quarto cadastrado");
        this.status.setForeground(Color.RED);
        this.btnLimpar.setVisible(false);
        this.numero.setVisible(false);
        this.icone.setVisible(false);
        this.setBackground(new Color(209, 205, 205));
    }

    /**
     * Construtor usado quando existe quartos cadastrados, recebe um objeto do
     * tipo Reserva contendo os dados que estão ocupando o quarto em cada um dos
     * blocos componentes. O status do quarto é utilizado para alterar a cor do
     * bloco componente. O status true = ocupado, false = livre.
     *
     * @param r
     */
    public BlocoComponent(Reserva r) {
        initComponents();
        blocoController = new BlocoComponentController(this);
        this.reserva = r;
        this.numero.setText("Quarto " + r.getQuarto().getNumeroQuarto());
        //Alterar o status simbolizado pelas cores nos blocos
        blocoController.alterarStatus(this.reserva.getQuarto().getStatusQuarto(), this.reserva.getQuarto().getSujo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSButtonMetro1 = new rsbuttom.RSButtonMetro();
        icone = new javax.swing.JLabel();
        numero = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        btnLimpar = new rsbuttom.RSButtonMetro();

        rSButtonMetro1.setText("rSButtonMetro1");

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMinimumSize(new java.awt.Dimension(114, 17));
        setPreferredSize(new java.awt.Dimension(305, 85));
        setLayout(new java.awt.GridLayout(2, 2, 1, 0));

        icone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-door-hanger-48.png"))); // NOI18N
        icone.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        add(icone);

        numero.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        numero.setText("jLabel3");
        add(numero);

        status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        status.setText("jLabel2");
        add(status);

        btnLimpar.setText("statusQuarto");
        btnLimpar.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnLimpar.setMinimumSize(new java.awt.Dimension(45, 8));
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        add(btnLimpar);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        blocoController.executa(evt);
    }//GEN-LAST:event_btnLimparActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rsbuttom.RSButtonMetro btnLimpar;
    private javax.swing.JLabel icone;
    private javax.swing.JLabel numero;
    private rsbuttom.RSButtonMetro rSButtonMetro1;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables

    public Reserva getReserva() {
        return reserva;
    }

    public void setReserva(Reserva reserva) {
        this.reserva = reserva;
    }

    public RSButtonMetro getBtnLimpar() {
        return btnLimpar;
    }

    public void setBtnLimpar(RSButtonMetro btnLimpar) {
        this.btnLimpar = btnLimpar;
    }

    public JLabel getNumero() {
        return numero;
    }

    public void setNumero(JLabel numero) {
        this.numero = numero;
    }

    public RSButtonMetro getrSButtonMetro1() {
        return rSButtonMetro1;
    }

    public void setrSButtonMetro1(RSButtonMetro rSButtonMetro1) {
        this.rSButtonMetro1 = rSButtonMetro1;
    }

    public JLabel getStatus() {
        return status;
    }

    public void setStatus(JLabel status) {
        this.status = status;
    }

}
